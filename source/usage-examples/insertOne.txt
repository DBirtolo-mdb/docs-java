=================
Insert a Document
=================

.. default-domain:: mongodb

You can insert a single document into a collection using the ``insertOne()``
method on a ``MongoCollection`` object. To insert a document, construct a
``Document`` object that contains the fields and values that you want to
store. If you call the ``insertOne()`` method on a collection that does
not exist yet, the method creates it for you.

For more information on inserting data using MongoDB with the Java driver,
see our guide (TODO: Fundamentals > CRUD Operations > Write Operations)
on inserting documents.

The method returns an instance of ``InsertOneResult`` which contains
information such as the id (also known as the ``ObjectId``) of the
inserted document or ``null`` if you specified a value for the ``_id``
field in the inserted document.

If your insert operation fails, the driver raises an exception. For more
information on the types of exceptions raised under specific conditions,
see the API documentation for ``insertOne()``, linked at the bottom of
this page.

Example
-------

The following snippet inserts a single document into the ``movies``
collection.

.. include:: /includes/connect-guide-note.rst

.. literalinclude:: /includes/usage-examples/code-snippets/InsertOne.java
   :language: java

If you are using the **legacy API**, see (TODO: FAQ ?) to determine what
changes you need to make to this code example.

When you run the example, you should see output that resembles the following
with the inserted document ``ObjectId`` in the value field:

.. code-block:: none

   Successfully inserted a document: BsonObjectId{value=...}

For additional information on the classes and methods mentioned on this
page, see the following API documentation:

- :java-sync-api:`insertOne <com/mongodb/client/MongoCollection.html#insertOne>`
- :java-sync-api:`Document <bson/org/bson/Document.html>`
- :java-sync-api:`InsertOneResult <com/mongodb/client/result/InsertOneResult.html>`

