===============
Find a Document
===============

.. default-domain:: mongodb

You can retrieve a single document in a collection by chaining together
the ``find()`` and ``first()`` methods on a ``MongoCollection`` object.
You can pass a query filter to the ``find()`` method to query for and
return documents that match the filter in the collection. If you do not
include a filter, MongoDB returns all the documents in the collection. The
``first()`` method returns the first matching document.

For more information on querying MongoDB with the Java driver, see our
guide (TODO: link) to querying documents.

You can also chain other methods to the ``find()`` method
such as ``sort()`` (TODO: link) which organizes the matched documents in a
specified order, and ``projection()`` (TODO: link) which configures the
fields included in the return documents.

The ``find()`` method returns an instance of an iterator. Iterators are helpers
that allow you to traverse and retrieve a group of results. When you call the
``first()`` method on the iterator, it returns the first item or ``null`` if
there are no results.

For a complete list of method signatures and return values for ``find()``,
see the
`MongoCollection API documentation <http://mongodb.github.io/mongo-java-driver/4.0/apidocs/mongodb-driver-sync/com/mongodb/client/MongoCollection.html#find()>`_

Example
-------

The following snippet finds a single document from the ``movies`` collection.
It uses the following objects and methods:

- A **query filter** that is passed in the ``find()`` method. The ``eq``
  filter matches only movies with the title exactly matching the text
  ``'The Room'``.

- A **sort** that organizes matched documents in descending order by
  rating, so if our query matches multiple documents the returned
  document is the one with the highest rating.

- A **projection** that includes the objects in the ``title`` and ``imdb``
  fields and excludes the ``_id`` field using the helper method
  ``excludeId()``.

.. include:: /includes/connect-guide-note.rst

.. literalinclude:: /includes/usage-examples/code-snippets/FindOne.java
   :language: java

If you are using the MongoDB Java driver **legacy API**, use
:doc:`this example instead </usage-examples/findOneLegacy>`.
