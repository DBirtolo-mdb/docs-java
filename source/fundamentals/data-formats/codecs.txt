======
Codecs
======

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol


Overview
--------

- Description 
  - Relationship between Codec, CodecRegistry, and CodecProvider

CodecRegistry
-------------

- Description
- Example of setting Codec list
- Example of getting a Codec

CodecProvider
-------------

- Description
- Example of get method implementation

BsonTypeClassMap
~~~~~~~~~~~~~~~~

- Description
- Example of how to use to specify Bson mapping

Custom Codec Example
--------------------

- Methods to override
- Encode: Describe parameters: BsonWriter, EncoderContext
- Decode: Describe parameters: BsonReader, DecoderContext
- Example class, demonstrating implementing encode/decode. Perhaps something like this https://stackoverflow.com/questions/45083885/decode-document-to-a-java-class-using-custom-mongo-codec
- Sample query to demonstrate decode results (of a field in a POJO) using custom codec
- Sample insert and resulting fields of the document to demonstrate encode 
- Example showing how to read/encode a document with unknown fields

CodecRegistry
+-------------
+
+The CodecRegistry is a collection of Codec objects that define the encoding
+and decoding behavior of  from the MongoDB server and the
+driver.
+
+For more information on using custom Codecs for encoding and decoding
+data into POJOs,
+In
+during
+conversion
+
+
+- Brief introduction, link to data-formats/codecs for more info
+- Example demonstrating the following:
+  - specifying how to create a CodecRegistry that uses PojoCodecProvider
+  - example POJO class with getters/setters
+  - include user-defined classes and lists
+- Sample input/output of aforementioned example
+
+For more information on customizing
+
+, see the :doc:`POJO Customization </fundamentals/data-formats/pojo-customization>`
+page
+- Link to data-formats/pojo-customization for more information
