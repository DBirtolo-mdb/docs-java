===========================
Quick Start - Legacy Driver
===========================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. admonition:: This guide is for the legacy Java API only
   :class: important

   Unless your application needs to use the Legacy Java API, use the
   :doc:`Quick Start Guide </quick-start>` instead. 

.. include:: /includes/quick-start/overview.rst


Set up Your Project
-------------------

Install the Java Development Kit (JDK)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/quick-start/install-jdk.rst

Create the Project
~~~~~~~~~~~~~~~~~~~

.. include:: /includes/quick-start/create-project.rst

Add MongoDB as a Dependency
~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you are using Maven, add the following to your ``pom.xml`` dependencies
list:

.. code-block:: xml

   <dependencies>
       <dependency>
           <groupId>org.mongodb</groupId>
           <artifactId>mongodb-driver-legacy</artifactId>
           <version>4.0.1</version>
       </dependency>
   </dependencies>

If you are using Gradle, add the following to your ``build.gradle``
dependencies list:

.. code-block:: groovy

   dependencies {
     compile 'org.mongodb:mongodb-driver-legacy:4.0.1'
   }

Create a MongoDB Cluster
------------------------

.. include:: /includes/quick-start/atlas-setup.rst.

Next, create a file to contain your application called ``QuickStart.java``
in the base package directory of your project.

Add the following imports for this example.

.. code-block:: java

   import org.bson.Document;

   import com.mongodb.MongoClient;
   import com.mongodb.MongoClientURI;
   import com.mongodb.client.MongoCollection;
   import com.mongodb.client.MongoDatabase;

Next, add the following method, replacing the value of the ``uri`` variable
with your MongoDB Atlas connection string. Make sure to replace the
"<password>" section of the connection string with the password you created for
your user that has **atlasAdmin** permissions:

.. code-block:: java

   public static void main( String[] args ) {

       String uri = "mongodb+srv://<user>:<password>@<cluster-url>?retryWrites=true&w=majority";

       MongoClientURI connectionString = new MongoClientURI(uri);
       MongoClient mongoClient = new MongoClient(connectionString);


       MongoDatabase database = mongoClient.getDatabase("sample_mflix");
       MongoCollection<Document> collection = database.getCollection("movies");

       Document doc = collection.find(eq("title", "Back to the Future")).first();
       System.out.println(doc.toJson());

       mongoClient.close();
    }

.. include:: /includes/quick-start/query-output.rst

After completing this step, you should have a working application that uses
the Java driver to connect to your MongoDB instance, run a query on the
sample data, and print out the result.


Next steps
----------

.. include:: /includes/quick-start/next-steps.rst
